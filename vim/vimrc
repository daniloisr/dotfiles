call plug#begin('~/.vim/plugged')

" tools
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'rking/ag.vim'
Plug 'markabe/bufexplorer'
Plug 'majutsushi/tagbar'
Plug 'ntpeters/vim-better-whitespace'
Plug 'terryma/vim-multiple-cursors'
" Plug 'kien/ctrlp.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-easy-align'

" Plug 'Valloric/YouCompleteMe'
" Plug 'SirVer/ultisnips'
" Plug 'honza/vim-snippets'

" colors
Plug 'chriskempson/base16-vim'

" files
Plug 'kchmck/vim-coffee-script'
Plug 'lambdatoast/elm.vim'
Plug 'groenewege/vim-less'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'isRuslan/vim-es6'
Plug 'othree/html5.vim'
Plug 'vim-scripts/haskell.vim'

" Add plugins to &runtimepath
call plug#end()

" Necessary for nerdcommenter
filetype plugin on

" remove trailing space on save
autocmd BufWritePre * StripWhitespace

syntax enable
set background=dark
set t_Co=256
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif


" folding
set foldmethod=indent
set foldlevelstart=20

set lazyredraw
set showcmd
set backspace=indent,eol,start
set hlsearch " CTRL-L / CTRL-R W
set incsearch
set hidden
set ignorecase smartcase
set expandtab smarttab
set encoding=utf-8
set completeopt=menuone,preview

set tabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smartindent
set nowrap

set wildmenu
set wildmode=list:longest,full

" set statusline=[%n]\ %<%.55f\ %h%w%m%r%y
" set statusline+=%{fugitive#statusline()}
" set statusline+=%=
" set statusline+=[%c,%l/%L\|%P\]
" set laststatus=2

set hidden
set undofile
set undodir=~/tmp/vim
set dir=~/tmp/vim

set encoding=utf8
set fileencoding=utf8
set termencoding=utf8

" autoload a changed file http://stackoverflow.com/a/2158128/1042324
set autoread
au FocusGained,BufEnter * :silent! !

" Fix jbuilder syntax
au BufNewFile,FocusGained,BufRead *.jbuilder set ft=ruby

" Match ruby do/end
runtime macros/matchit.vim

" ctrlp stuffs
" let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:30,results:30'
let g:ctrlp_follow_symlinks = 1
let g:ctrlp_working_path_mode = 'rw'
let g:ctrlp_user_command
  \ = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

let mapleader = "\<Space>"
nmap <Leader>bb :BufExplorer<CR>
nmap <silent> <C-b> :BufExplorer<CR>

" Clearing search results
nmap <silent> <C-l> :nohl<CR>

" nmap <Leader>pp :CtrlP<CR>
" nmap <Leader>pb :CtrlPBuffer<CR>
" nmap <Leader>pm :CtrlPMRU<CR>
nmap <silent> <Leader><Leader> :Files<CR>
nmap <silent> <Leader><CR> :Buffer<CR>
nmap <silent> <C-p> :Files<CR>
nmap <Leader>pp :Files<CR>
nmap <Leader>pb :Buffers<CR>

nmap <Leader>tg :Tagbar<CR>

nmap <Leader>tt :NERDTreeToggle<CR>
nmap <Leader>tf :NERDTreeFind<CR>
nmap <Leader>tc :e %:p:h<CR>

nmap <Leader>s :wa<CR>
nmap <Leader>q :q<CR>

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" https://github.com/Valloric/YouCompleteMe
" let g:ycm_key_list_select_completion = ['<Down>']
" let g:ycm_key_list_previous_completion = ['<Up>']

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" let g:UltiSnipsExpandTrigger="<c-l>"
" let g:UltiSnipsJumpForwardTrigger="<c-n>"
" let g:UltiSnipsJumpBackwardTrigger="<c-p>"
